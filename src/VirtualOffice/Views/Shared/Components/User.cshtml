<style>
    .vo-user {
        display: inline-block;
        position: absolute;
        width: 50px;
        height: 50px;
        cursor: pointer;
        user-select: none;
    }

    .vo-user__avator {
        width: 100%;
        height: 100%;
        box-sizing: border-box;
        border: 1px solid black;
        border-radius: 50%;
        overflow: hidden;
    }

        .vo-user__avator img {
            user-select: none;
            pointer-events: none;
        }

    .vo-user.--me .vo-user__avator {
        border-color: red;
    }

    .vo-user.--has-message::before {
        content: '';
        display: block;
        box-sizing: border-box;
        width: 10px;
        height: 10px;
        border: 10px solid transparent;
        border-top-color: white;
        position: absolute;
        top: -12px;
        left: 6px;
        z-index: 1;
    }
    .vo-user.--has-message::after {
        content: attr(data-message);
        background: white;
        border-radius: 4px;
        padding: 0.5rem;
        position: absolute;
        top: -50px;
        width: max-content;
        z-index: 1;
    }
</style>
<template id="user-component">
    <div :class="['vo-user', {'--me': me, '--has-message': message}]" 
         :style="style" 
         :title="name" 
         :data-message="message">
        <div class="vo-user__avator" 
             v-on:pointerdown="$emit('pointerdown',$event)"
             v-on:click="$emit('click',$event)">
            <img :src="icon" />
        </div>
    </div>
</template>
<script>
    Vue.component('vo-user', {
        template: '#user-component',
        props: {
            me: { type: Boolean },
            x: { type: Number },
            y: { type: Number },
            name: { type: String },
            icon: { type: String },
            message: { type: String },
        },
        data() {
            return {
            }
        },
        computed: {
            style() {
                return {
                    left: (this.x - 25) + 'px',
                    top: (this.y - 25) + 'px'
                }
            }
        },
        methods: {
        },
        mounted() {
        }
    })
</script>